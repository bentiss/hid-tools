# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0:

.templates_sha: &template_sha d03cddbcff35f26861429fc816c00323f48e99af # see https://docs.gitlab.com/ee/ci/yaml/#includefile

include:
  # Fedora container builder template
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file:
      - '/templates/fedora.yml'

variables:
  PYTHON_VERSION: '3.9'
  PYTHON: python$PYTHON_VERSION
  PIP: pip$PYTHON_VERSION
  TEST_PACKAGES: 'python3.9 python3.10 python3.11 python3 make jq systemd-udev libevdev'
  TEST_EXEC: >  # multi-line yaml that replaces new lines by spaces
    $PYTHON -m ensurepip --upgrade;
    $PYTHON -m pip install --upgrade pip;
    $PIP install hatch\
                 ruff \
                 attrs \
                 parse \
                 pyudev \
                 pytest \
                 libevdev \
                 click \
                 pyyaml \
                 pyroute2 \
                 pytest-retry \
                 pytest_tap \
                 pytest-xdist \
                 typing_extensions
  BUILD_PACKAGES: >
    file
    git-core
    gcc
    gcc-c++
    diffutils
    make
    flex
    bison
    sparse
    bc
    xz
    findutils
    hostname
    elfutils-libelf-devel
    openssl-devel
    perl-Term-ANSIColor
    perl-Encode
    jq
  FDO_DISTRIBUTION_VERSION: 40
  FDO_UPSTREAM_REPO: 'libevdev/hid-tools'
  TEST_CONTAINER_TAG: '2024-07-24.2'
  BUILD_CONTAINER_TAG: '2024-07-24.1'
  FDO_DISTRIBUTION_TAG: $TEST_CONTAINER_TAG
  KERNEL_VERSION: '6.10'

stages:
  - sanity check
  - prep
  - build
  - test
  - analysis

fail-if-fork-is-not-public:
  stage: sanity check
  script:
    - |
      if [ $CI_PROJECT_VISIBILITY != "public" ]; then
           echo "*************************************************************************************"
           echo "Project visibility must be set to 'public'"
           echo "Change this in $CI_PROJECT_URL/edit under 'Visibility, project features, permissions'"
           echo "*************************************************************************************"
           exit 1
      fi
  except:
    - main@libevdev/hid-tools
    - master@libevdev/hid-tools

test container prep:
  extends:
    - .fdo.container-build@fedora
  stage: prep
  variables:
    GIT_STRATEGY: none
    FDO_DISTRIBUTION_PACKAGES: $TEST_PACKAGES
    FDO_DISTRIBUTION_EXEC: $TEST_EXEC
.build_variables:
  variables:
    FDO_DISTRIBUTION_TAG: $BUILD_CONTAINER_TAG
    FDO_DISTRIBUTION_PACKAGES: $BUILD_PACKAGES
    FDO_REPO_SUFFIX: build-kernel

.b2c_kernel_url:
  before_script: &b2c-kernel-url
    - export KERNEL_URL=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/kernel-$(arch)/v$KERNEL_VERSION/bzImage

build container prep:
  extends:
    - .fdo.container-build@fedora
    - .build_variables
  stage: prep
  variables:
    GIT_STRATEGY: none

rebuild kernel:
  extends:
    - .fdo.suffixed-image@fedora
    - .build_variables
  stage: build
  needs:
    - build container prep
  script:
    - *b2c-kernel-url
    - .gitlab-ci/kernel-build.sh

.default_image:
  extends:
    - .fdo.distribution-image@fedora
  needs:
    - test container prep

python formatting:
  extends: .default_image
  stage: build
  script:
    - ruff format --check .

python lint:
  extends: .default_image
  stage: build
  script:
    - hatch run types:check

install:
  extends: .default_image
  stage: build
  script:
    - $PIP install . --verbose

pytest:
  extends:
    - .fdo.b2c-image@fedora
  tags:
    - kvm
  stage: test
  needs:
    - python formatting
    - rebuild kernel
  script:
    - *b2c-kernel-url
    - export B2C_KERNEL=$KERNEL_URL

    - echo "[pytest]" > pytest.ini
    - echo "junit_family=xunit2" >> pytest.ini
    - export B2C_COMMAND="hatch run +py=$PYTHON_VERSION test:pytest -v --junitxml=junit-$CI_JOB_NAME_SLUG.xml tests"
    - rm -f junit-$CI_JOB_NAME.xml
    - /app/boot2container
  artifacts:
    name: "qemu-pytest-logs-$CI_JOB_NAME"
    when: always
    expire_in: 1 week
    paths:
      - junit-*.xml
    reports:
      junit: junit-*.xml
  parallel:
    matrix:
      - PYTHON_VERSION:
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"

pytest kernel:
  extends:
    - .fdo.b2c-image@fedora
  tags:
    - kvm
  stage: test
  needs:
    - python formatting
    - rebuild kernel
  script:
    - *b2c-kernel-url
    - export B2C_KERNEL=$KERNEL_URL

    - echo "[pytest]" > pytest.ini
    - echo "junit_family=xunit2" >> pytest.ini
    - export B2C_COMMAND="hatch run +py=$PYTHON_VERSION test:pytest -v --udevd --junitxml=junit-$CI_JOB_NAME_SLUG.xml --retries 2"
    - rm -f junit-$CI_JOB_NAME.xml
    - set +e # Disable exit on error
    - /app/boot2container ; echo $? > .exit_code
    - set -e # Re-enable exit on error
    - cat '.exit_code'
    # pytest uses 2 and above for any errors outside the tests themselves
    - if [[ `cat .exit_code` -gt 1 ]] ;
      then
        exit 1 ;
      fi
  artifacts:
    name: "qemu-pytest-logs-$CI_JOB_NAME"
    when: always
    expire_in: 1 week
    paths:
      - junit-*.xml
    reports:
      junit: junit-*.xml

pytest errors:
  extends:
    - .fdo.distribution-image@fedora
  stage: analysis
  needs:
    - pytest kernel
  script:
    - $PIP install yq
    - errors=`cat junit-*.xml | xq -r '.testsuites.testsuite."@errors"'`
    - test $errors -ne 0 && echo "pytest encountered $errors errors, please fix"
    - echo "See the previous stage for test logs"
    - exit $errors
  allow_failure: false

pytest failures:
  extends:
    - .fdo.distribution-image@fedora
  stage: analysis
  needs:
    - pytest kernel
  script:
    - $PIP install yq
    - failures=`cat junit-*.xml | xq -r '.testsuites.testsuite."@failures"'`
    - test $failures -ne 0 && echo "pytest encountered $failures test case failures"
    - echo "See the previous stage for test logs"
    - exit $failures
  allow_failure: true
